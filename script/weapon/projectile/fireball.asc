#include "../../entity.asc"

[export]
float g_speed = 0.25;
[export]
int g_self_destruct_time = 5000;

int g_currentTime = 0, g_startTime = 0;

vector3d camera_rot;

void init(entityid self)
{
	g_startTime = time::get();
	
	transform::position(self, render::getCameraPosition());
	transform::scale(self, vector3d(0.15, 0.15, 0.15));
	
	camera_rot = render::getCameraLookDirNormalized();
}

void update(entityid self)
{
	g_currentTime = time::get();

	if (g_currentTime - g_startTime > g_self_destruct_time)
	{
		entity::kill(self);
		//entity::spawn("billboard/explosion1", transform::position(self));
	}
	
	transform::position(self, transform::position(self) + camera_rot * g_speed);
	
	raycast::line(transform::position(self), transform::position(self) + camera_rot * 0.5);
	if (raycast::test())
	{
		entity::kill(self);
		//entity::spawn("billboard/explosion1", transform::position(self));
		
		game::damage(raycast::id(), 50);
	}
}