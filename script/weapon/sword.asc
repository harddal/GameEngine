#include "../entity.asc"
#include "weapon_base.asc"

void init(entityid self)
{
	g_weapon_base_firerate_ms = 300;
	
	g_weapon_base_range  = 2.0;
	g_weapon_base_damage = 15;

	weapon_base_init(self);
	
	transform::position(self, vector3d(0, -.1, -.1));
}

int attack_timer = 0, last_time = 0;

bool blockstart = false;
bool blocking   = false;
bool blockend   = false;
bool longattack = false;
bool attack     = false;

void sword_update(entityid self)
{	
	player::blocking(blocking);

	if (!blocking && !blockstart && !longattack)
	{
		if (animation::ended(self))
		{
			if (player::isMoving()) 
			{
				animation::play(self, "move");
			} 
			else
			{
				animation::play(self, "idle");
			}
		} 
		
		if (animation::last(self) == "idle" && player::isMoving()) 
		{
			animation::play(self, "move");
		}
		
		if (animation::last(self) == "move" && !player::isMoving()) 
		{
			animation::play(self, "idle");
		}
	}

	if (input.onActionPress("primary") && !blocking && !blockstart)
	{
		attack_timer = attack_timer + (g_weapon_base_currentTime - last_time);
		
		if (attack_timer > 500 && !longattack)
		{
			animation::play(self, "thruststart");
			
			longattack = true;
		}
	}
	
	if (animation::last(self) == "thruststart" && animation::ended(self) && longattack)
	{
		animation::loop(self, "thrusthold");
	}
	
	if (input.onActionRelease("primary") && !blocking && !blockstart)
    {
        attack = true;
		
		attack_timer = 0;
    }
	
	if (attack
		&& g_weapon_base_currentTime - g_weapon_base_lastFireTime > g_weapon_base_firerate_ms
		&& !blocking && !blockstart)
	{
		int damage = 0;
	
		if (!longattack)
		{
			// if (math::random(10) > 5)
			// {
				// animation::play(self, "slash");
				
			// }
			// else
			// {
				// animation::play(self, "crossslash");
			// }
			
			animation::play(self, "slash");
			
			damage = 15;
		}
		else
		{
			animation::play(self, "thrustend");
			
			damage = 30;
		}
		
		sound::play(self, "fire");
			  
		if (raycast::camera())
		{
			if (raycast::length() < g_weapon_base_range) 
			{
				game::damage(raycast::id(), damage);
				entity::spawn("debug/hitmarker", raycast::position(), vector3d(0, 0, 0), vector3d(0.1, 0.1, 0.1));
			}
		}
					
		g_weapon_base_lastFireTime = g_weapon_base_currentTime;
		g_weapon_base_semiFlag = true;
		
		attack = false;
		longattack = false;
	}
	
	if (input.onActionPress("secondary") && !longattack)
	{	
		if (!blocking && blockstart && animation::ended(self) && animation::last(self) == "blockstart")
		{
			blocking = true;
			
			animation::loop(self, "blockidle");
		}
		
		if (!blocking && !blockstart && ((animation::ended(self)) || (animation::last(self) == "idle" || animation::last(self) == "move")))
		{
			animation::play(self, "blockstart");
			
			blockstart = true;
		}
	}	
	
	if (input.onActionRelease("secondary") && blockstart)
	{
		animation::play(self, "blockend");
		
		blockstart = false;
		blocking   = false;
	}
	
}

void update(entityid self)
{
	g_weapon_base_currentTime = time::get();

    weapon_base_equip(self);
	
	sword_update(self);
	
	last_time = time::get();
}

